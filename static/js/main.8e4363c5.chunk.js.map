{"version":3,"sources":["Order/Order.js","App.js","serviceWorker.js","index.js"],"names":["Order","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","getData","date","Date","deadline","amPm","getHours","hours","substr","minutes","getMinutes","seconds","getSeconds","getMonth","getDate","getFullYear","getWorkerName","objectSpread","state","workerArray","workerId","name","componentDidMount","bind","assertThisInitialized","_this2","$","each","css","Math","floor","random","fetch","then","data","json","worker","slice","addWorkerName","setState","workerFrom","display","react_default","a","createElement","className","style","borderTop","id","description","alt","src","image","companyName","email","React","Component","App","search","event","orderData","ordersDuplicate","toConsumableArray","target","value","length","searchArray","k","entries","names","forEach","entry","key","toLowerCase","indexOf","push","apply","order","j","orderid","filteredOrder","i","loading","error","sortByDeadlineAsc","sortByDeadlineDesc","sort","b","results","ok","Error","status","Array","from","orders","map","worker_name","catch","console","log","type","onChange","placeholder","onClick","workers_display","workers_not_display","tmp_list","src_Order_Order","addNameToParent","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8e4363c5.chunk.js","sourcesContent":["/*global $*/\nimport React from \"react\"\nimport \"./Order.css\"\n\nclass Order extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            workerArray: []\n        }\n        this.props = props;\n        this.componentDidMount = this.componentDidMount.bind(this)\n    }\n\n    getData = (props) => {\n        var date = new Date(props.deadline * 1000);\n        // Hours part from the timestamp\n        var amPm = date.getHours() >= 12 ? 'PM' : 'AM'\n        // % is modulo which is the remainder after division || will change 0 to 12\n        // because 0 is falsey everything else will be left as it is\n        var hours = (\"0\" + ((date.getHours() % 12) || 12)).substr(-2)\n        // Minutes part from the timestamp\n        var minutes = (\"0\" + date.getMinutes()).substr(-2)\n        // Seconds part from the timestamp\n        var seconds = (\"0\" + date.getSeconds()).substr(-2)\n        var month = date.getMonth();\n        var dateMonth = date.getDate();\n        var year = date.getFullYear();\n        // eslint-disable-next-line\n        return month + \"/\" + dateMonth + \"/\" + year + \"\\t\" + hours + ':' + minutes + ':' + seconds + ' ' + amPm\n    }\n\n    componentDidMount() {\n        $('.orderContainer').each(function () {\n            $(this).css(\"border-top-color\", 'rgb(' + (Math.floor((205)*Math.random())+50) + ',' + (Math.floor((205)*Math.random())+50) + ',' + (Math.floor((205)*Math.random())+50) + ')');\n        });\n        fetch(\"https://www.hatchways.io/api/assessment/workers/\" + this.props.workerId)\n        .then(data => data.json())\n        .then(data => {\n            let worker = this.state.workerArray.slice();\n            worker[this.props.workerId] = data.worker;\n            this.props.addWorkerName(worker[this.props.workerId].name, this.props);\n            this.setState({\n                workerArray: worker\n            })\n        })\n    }\n\n    getWorkerName = () => {\n        let workerFrom = {...this.state.workerArray[this.props.workerId]};\n        return workerFrom.name;\n    }\n\n    render() {\n        let workerFrom = {...this.state.workerArray[this.props.workerId]};\n        if(this.props.display === true){\n          return (\n              <div className=\"orderContainer col xl12\" style={{\"borderTop\": \"5px solid\"}}>\n                <div className=\"row\">\n                  <h2 className=\"col s12\">{this.props.name}</h2>\n                </div>\n                <div className=\"row\">\n                  <p className=\"col m12\"><span>OrderId:</span>{this.props.id}</p>\n                </div>\n                <div className=\"row\">\n                  <p className=\"col m12\"><span>Description:</span>{this.props.description}</p>\n                </div>\n                  <div className=\"worker row\">\n                      <img className=\"col s8\" alt='' src={workerFrom.image}/>\n                      <div className=\"workerInfo\">\n                          <h3 className=\"workerName\">{workerFrom.name}</h3>\n                          <p>{workerFrom.companyName}</p>\n                          <p>{workerFrom.email}</p>\n                      </div>\n                  </div>\n                <p className=\"date\"><i>{this.getData(this.props)}</i></p>\n              </div>\n          )\n        }else{\n          return (<div></div>);\n        }\n\n    }\n}\n\nexport default Order\n","import React from 'react';\nimport Order from \"./Order/Order\";\nimport './App.css';\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      loading: false,\n      filteredOrder: [],\n      orderData: [],\n      error: false,\n      names: {}\n    }\n    this.search = this.search.bind(this)\n    this.sortByDeadlineAsc = this.sortByDeadlineAsc.bind(this)\n    this.sortByDeadlineDesc = this.sortByDeadlineDesc.bind(this)\n  }\n\n  addNameToParent(name, order) {\n    var names = this.state.names;\n    if(name in this.state.names){\n      names[name].push(order);\n    }else{\n      names[name] = [order];\n    }\n    this.setState({\n      names: names\n    });\n  }\n\n  search = (event) => {\n    if (this.state.orderData == null) {\n      return;\n    }\n    let ordersDuplicate = [...this.state.orderData]\n    let search = event.target.value;\n    if(search.length === 0){\n      for(var i in ordersDuplicate){\n        var order = ordersDuplicate[i]\n        order.display = true;\n      }\n      this.setState({\n        filteredOrder: this.state.orderData\n      });\n      return;\n    }else{\n      let searchArray = [];\n      Object.entries(this.state.names).forEach(entry => {\n        let key = entry[0];\n        let value = entry[1];\n        if (key.toLowerCase().indexOf(search.toLowerCase()) !== -1) {\n          searchArray.push(...value)\n        }\n      });\n      for(var k in ordersDuplicate){\n        // eslint-disable-next-line\n        var order = ordersDuplicate[k];\n        order.display = false;\n        for(var j in searchArray){\n          var orderid = searchArray[j]\n          if(order.id === orderid.id){\n            order.display = true;\n            break;\n          }\n        }\n      }\n      this.setState({\n        filteredOrder: ordersDuplicate\n      });\n      return;\n    }\n\n  }\n\n  sortByDeadlineAsc() {\n    if (this.state.orderData == null) {\n      return;\n    }\n    let ordersDuplicate = [...this.state.filteredOrder]\n    ordersDuplicate = ordersDuplicate.sort((a, b) => (a.deadline - b.deadline))\n    this.setState({\n      filteredOrder: ordersDuplicate\n    });\n  }\n\n  sortByDeadlineDesc() {\n    if (this.state.orderData == null) {\n      return;\n    }\n    let ordersDuplicate = [...this.state.filteredOrder]\n    ordersDuplicate = ordersDuplicate.sort((a, b) => (b.deadline - a.deadline))\n    this.setState({\n      filteredOrder: ordersDuplicate\n    });\n  }\n\n  componentDidMount() {\n    this.setState({\n      loading: true\n    })\n    fetch(\"https://www.hatchways.io/api/assessment/work_orders\")\n    .then(results => {\n      if (!results.ok) throw new Error(results.status)\n      else return results.json()\n    })\n    .then(data => {\n      // eslint-disable-next-line\n      Array.from(data.orders).map(order => {\n        order.display = true;\n        order.worker_name = '';\n      });\n      this.setState({\n        orderData: data.orders,\n        loading: false,\n        filteredOrder: data.orders\n      })\n    })\n    .catch((error) => {\n      console.log('error: ' + error);\n      this.setState({\n        error: true\n      })\n    })\n  }\n\n\n  render(props) {\n    if(this.state.loading){\n      return (\n        <div>\n          <header>\n            <h1 id=\"title\">Order! Order!</h1>\n            <input type=\"text\" name=\"search\" onChange={this.search} placeholder=\"Filter by order id...\"/>\n          </header>\n          <div className=\"buttonContainer\">\n              <input type=\"button\" onClick={this.sortByDeadlineAsc} value=\"Sort Ascending\"/>\n              <input type=\"button\" onClick={this.sortByDeadlineDesc} value=\"Sort Descending\"/>\n          </div>\n          <div className=\"mainDiv row\">\n            <h2>Loading...</h2>\n          </div>\n        </div>\n      );\n    }else{\n      let workers_display = [];\n      let workers_not_display = [];\n      let tmp_list = [];\n      for(var i = 0; i < this.state.filteredOrder.length; i += 1){\n        var order = this.state.filteredOrder[i]\n        if(order.display){\n          tmp_list.push(<Order display={order.display} addWorkerName={this.addNameToParent.bind(this)} key={order.id} name={order.name} description={order.description} deadline={order.deadline} id={order.id} workerId={order.workerId}/>)\n          if(tmp_list.length === 2){\n            workers_display.push(<div key={i} className=\"mainDiv row\">{tmp_list[0]}{tmp_list[1]}</div>);\n            tmp_list = [];\n          }\n        }else{\n          workers_not_display.push(<Order display={order.display} addWorkerName={this.addNameToParent.bind(this)} key={order.id} name={order.name} description={order.description} deadline={order.deadline} id={order.id} workerId={order.workerId}/>)\n        }\n      }\n      if(tmp_list.length === 1){\n        workers_display.push(<div key={i} className=\"mainDiv row\">{tmp_list[0]}</div>);\n        tmp_list = [];\n      }\n\n      return (\n        <div>\n          <header>\n            <h1 id=\"title\">Order! Order!</h1>\n            <input type=\"text\" name=\"search\" onChange={this.search} placeholder=\"Filter by Name!\"/>\n          </header>\n          <div className=\"buttonContainer\">\n              <input type=\"button\" onClick={this.sortByDeadlineAsc} value=\"Sort Ascending\"/>\n              <input type=\"button\" onClick={this.sortByDeadlineDesc} value=\"Sort Descending\"/>\n          </div>\n          {workers_display}\n        </div>\n      );\n    }\n\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}